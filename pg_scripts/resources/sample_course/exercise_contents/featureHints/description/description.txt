<h2>Objective</h2><p>Add a new feature to the legacy code: printing out the possible moves on the board.</p><p>There are techniques for work with legacy code, which respect the properties, functionality and structure of the existing code, no matter how good it is. One of this techniques is called <em>sprout</em>, it uses isolating a new code in an existing one, so existing code is not changed. New code may be tested independently and its influence of the existing functionality is limited and observable. A sprout method, which provides a new functionality, is called withing an existing code. When it is needed to add a sequence of actions and changes, which are related to each other, creating a sprout method may be not enough. In this case a sprout class may be used, with new variables and methods.</p><p>Keep the original core structure of the code. You should write own tests so the program would maintain functional and new features would be implemented correctly. The program should pass all your and hidden tests.</p><h3><strong>User stories</strong></h3><ul><li>Every time when a player is on turn, print the current board with hints, marked as 'o'</li><li>Use sprout method</li><li>Do not make changes to the legacy code, only add new</li></ul>