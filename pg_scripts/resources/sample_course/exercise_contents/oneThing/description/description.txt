<h2>Objective</h2><blockquote><em>Functions should do one thing. They should do it well. They should do it only.&nbsp;So, another way to know that a function is doing more than “one thing” is if you can extract another function from it with a name that is not merely a restatement of its implementation.&nbsp;</em><br><em>(Robert C. Martin.&nbsp;Clean Code: A Handbook of Agile Software Craftsmanship)</em></blockquote><p>The legacy program contains numerous example of such a functions. Reversi constructor reads a configurations file and checks if the config file has the required lines number. This functinality should be extracted and called after the file reading. Function&nbsp;<em>initGame&nbsp;</em>does not initialize game only, but also sets a player on turn, creates and fills playground, and places the pieces on it. Function&nbsp;<em>run&nbsp;</em>contains execution of the read line, which should be extracted as well. Function&nbsp;<em>move&nbsp;</em>does multiple things as well: it ends the game, finds pieces to flip, and flips them. Function&nbsp;<em>areValidMoves&nbsp;</em>gets possible moves. It also finds pieces to flip as well as&nbsp;<em>move</em>&nbsp;function with the use of duplicate code.</p><p>Make the current code way more readable and maintainable with extracting the functions from the ones, which do multiple things.</p><p>Keep the original core structure of the code. You should write own tests so the program would maintain functional and new features would be implemented correctly. The program should pass all your and hidden tests.</p><h3><strong>User stories</strong></h3><ul><li>Extract function <em>checkLength</em> from Reversi contructor</li><li>Extract functions <em>setSize</em>,&nbsp;<em>setOnTurn</em>,&nbsp;<em>createPlayground</em>,&nbsp;<em>fillPlayground&nbsp;</em>and&nbsp;<em>setPiece&nbsp;</em>from function&nbsp;<em>initGame</em></li><li>Extract function&nbsp;<em>execute&nbsp;</em>from function&nbsp;<em>run</em></li><li>Extract function&nbsp;<em>endGame</em>,&nbsp;<em>flipPieces</em>,&nbsp;<em>getPiecesToFlip&nbsp;</em>from function&nbsp;<em>move</em></li><li>Extract functions&nbsp;<em>getPiecesToFlip&nbsp;</em>from function&nbsp;<em>areValidMoves</em>.</li></ul>