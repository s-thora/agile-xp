<h2>Objective</h2><p>This exercise focuses on handling exceptions. Errors handling not only makes code robust, but also clean.</p><p>In the legacy code, when an error occurs, the message is printed out to console right where it was occurred. Errors should be thrown instead and handled on higher level, with the use of&nbsp;<em>try/catch/finally</em>&nbsp;block. Use custom <em>IncorrectGameConfigFileException</em> instead and add pass it a message, which is originally printed to the console when an error occurs.</p><p>Function <em>checkLength</em> throws an unspecific Exception, which tells nothing about the error, so should be avoided. Use a custom <em>IncorrectGameConfigFileException </em>instead<em>.</em></p><p>Keep the original core structure of the code. You should write own tests so the program would maintain functional and new features would be implemented correctly. The program should pass all your and hidden tests.</p><h3><strong>User stories</strong></h3><ul><li>Use custom exception <em>IncorrectGameConfigFileException</em> to handle errors when reading game configuration file</li></ul>